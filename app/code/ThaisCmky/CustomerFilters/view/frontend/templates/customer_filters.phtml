<?php
//TODO: update deprecated escaper method
/** * Copyright Â© Magento, IgetMaxQueryLengthnc. All rights reserved. * See COPYING.txt for license details. */
/** * Catalog advanced search form *
 * @var $block \Magento\CatalogSearch\Block\Advanced\Form
 * @var \Magento\Framework\View\Helper\SecureHtmlRenderer $secureRenderer */
?>
<?php /** @var \Magento\CatalogSearch\Helper\Data $catalogSearchHelper */
$catalogSearchHelper = $block->getData('catalogSearchHelper'); ?>
<?php $maxQueryLength = $catalogSearchHelper->getMaxQueryLength(); ?>
<form class="form search advanced" action="<?= $block->escapeUrl($block->getSearchPostUrl()) ?>" method="get"
      id="form-validate">
    <fieldset class="fieldset">
        <?php
            foreach ($block->getSearchableAttributes() as $_attribute):
                if($block->getAttributeInputType($_attribute) !== 'price')
                    continue;
                $_code = $_attribute->getAttributeCode();
        ?>
        <div class="field <?= $block->escapeHtmlAttr($_code) ?>">
                <label class="label" for="<?= $block->escapeHtmlAttr($_code) ?>">
                    <span>Search by <?= $block->escapeHtml(__($block->getAttributeLabel($_attribute))) ?>:</span>
                </label>
            <div class="control">
                <div class="range price fields group group-2">
                <div class="field no-label">
                    <div class="control">
                        <input name="<?= $block->escapeHtmlAttr($_code) ?>[from]"
                            placeholder="0.00"
                            value="<?= $block->escapeHtml($block->getAttributeValue($_attribute, 'from')) ?>"
                            id="<?= $block->escapeHtmlAttr($_code) ?>"
                            title="<?= $block->escapeHtml($block->getAttributeLabel($_attribute)) ?>"
                            class="input-text" type="text"
                            maxlength="<?= $block->escapeHtmlAttr($maxQueryLength) ?>"
                            data-validate="{number:true, 'validate-not-negative-number':true, 'less-than-equals-to':'#<?= $block->escapeHtmlAttr($_code) ?>_to'}"
                        />
                    </div>
                </div>
                <div class="field with-addon no-label">
                    <div class="control">
                        <div class="addon">
                            <input name="<?= $block->escapeHtmlAttr($_code) ?>[to]"
                                      value="<?= $block->escapeHtml($block->getAttributeValue($_attribute, 'to')) ?>"
                                      placeholder="500.00"
                                      id="<?= $block->escapeHtmlAttr($_code) ?>_to"
                                      title="<?= $block->escapeHtml($block->getAttributeLabel($_attribute)) ?>"
                                      class="input-text" type="text"
                                      maxlength="<?= $block->escapeHtmlAttr($maxQueryLength) ?>"
                                      data-validate="{number:true, 'validate-not-negative-number':true, 'greater-than-equals-to':'#<?= $block->escapeHtmlAttr($_code) ?>'}"
                            />
                            <label
                                class="addafter"
                                for="<?= $block->escapeHtmlAttr($_code) ?>_to"><?= $block->escapeHtml($block->getCurrency($_attribute)) ?>
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <?php endforeach; ?></fieldset>
    <div class="actions-toolbar">
        <div class="primary">
            <button type="submit" class="action search primary" title="<?= $block->escapeHtml(__('Search')) ?>">
                <span><?= $block->escapeHtml(__('Search')) ?></span></button>
        </div>
    </div>
</form><?php $scriptString = <<<script
require([
    "jquery",
    "mage/mage",
    "mage/validation"
], function($){
    $('#form-validate').mage('validation', {
            errorPlacement: function (error, element) {
                var parent = element.parent();
                if (parent.hasClass('range')) {
                    parent.find(this.errorElement + '.' + this.errorClass).remove().end().append(error);
                } else {
                    error.insertAfter(element);
                }
            },
            messages: {
                'price[to]': {'greater-than-equals-to': '{$block->escapeJs(__('Please enter a valid price range.'))}'},
                'price[from]': {'less-than-equals-to': '{$block->escapeJs(__('Please enter a valid price range.'))}'}
            }
        });
});
script; ?>

<?= /* @noEscape */
$secureRenderer->renderTag('script', [], $scriptString, false) ?>
